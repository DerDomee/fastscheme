// Color selector mixin
@mixin colorselect($attribute, $color, $prestring: null, $sufstring: null) {
  // If Variable is explicitly set, then light theme shall
  // be the fallback default.
  @if $no-scheme-compat-fallback-light {
    #{$attribute}: #{$prestring} light($color) #{$sufstring};

    // If browser specifically requests dark scheme, then deliver.
    @media(prefers-color-scheme: dark) {
      #{$attribute}: #{$prestring} dark($color) #{$sufstring};
    }
  }
  @else {
    // If Variable is left to default, then dark theme shall
    // be the fallback default.
    #{$attribute}: #{$prestring} dark($color) #{$sufstring};

    // If browser specifically requests light scheme, then deliver.
    @media(prefers-color-scheme: light) {
      #{$attribute}: #{$prestring} light($color) #{$sufstring};
    }
  }
  //Check if overrides are enabled, then use them in the mixin
  @if $fs-build-overrides {
    // If element also has a class to force a theme, use this theme instead:
    &.force-theme-darkest {
      // Force darkest (black) theme
      #{$attribute}: #{$prestring} darkest($color) #{$sufstring} !important;
    }

    &.force-theme-dark {
      // Force dark theme
      #{$attribute}: #{$prestring} dark($color) #{$sufstring} !important;
    }

    &.force-theme-light {
      // Force light theme
      #{$attribute}: #{$prestring} light($color) #{$sufstring} !important;
    }
  }
}


@mixin hide-medium-and-up {
  @media screen and (min-width: $breakpoint-small) {
    display: none;
  }
}

@mixin hide-large-and-up {
  @media screen and (min-width: $breakpoint-medium) {
    display: none;
  }
}

@mixin hide-largest {
  @media screen and (min-width: $breakpoint-large) {
    display: none;
  }
}

@mixin hide-large-and-down {
  @media screen and (max-width: $breakpoint-large - 1px) {
    display: none;
  }
}

@mixin hide-medium-and-down {
  @media screen and (max-width: $breakpoint-medium - 1px) {
    display: none;
  }
}

@mixin hide-small {
  @media screen and (max-width: $breakpoint-small - 1px) {
    display: none;
  }
}

@mixin override-medium-screen {
  @media screen and (min-width: $breakpoint-small) {
    @content;
  }
}

@mixin override-large-screen {
  @media screen and (min-width: $breakpoint-medium) {
    @content;
  }
}

@mixin override-largest-screen {
  @media screen and (min-width: $breakpoint-large) {
    @content;
  }
}

@mixin clearfix {
  &::before,
  &::after {
    content: " ";
    display: table;
  }

  &:after {
    clear: both;
  }
}
